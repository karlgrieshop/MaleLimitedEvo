# DsRed transcriptomic analysis

# Modified from "total.expression.sh.txt"

# see Dobin and Gingeras 2015

##generate indices for genome - provide both FASTA and GTF files
#genomeSAindexNbases - from help: "for small genomes, this parameter should be scaled down to min 14"; for large genomes, use lower values; 12 recommended by STAR log warning

# Index reference genome for STAR mapping
STAR --runThreadN 12 --runMode genomeGenerate --genomeSAindexNbases 12 --genomeDir ~/FlyBase_Ref --genomeFastaFiles ~/FlyBase_Ref/Drosophila_melanogaster.BDGP6.28.dna.toplevel.fa --sjdbGTFfile ~/FlyBase_Ref/Drosophila_melanogaster.BDGP6.28.102.gtf


##map RNA-seq reads with 2-pass procedure, generating unsorted and coordinate-sorted BAM files
# sjdbOverhang - should be (read length-1), tells STAR how many bases to concatenate from donor and acceptor sides of the junctions.
# readFilesCommand - zcat to uncompress .gz files
# twopassMode - recommended for better coverage 

for i in $(ls *.fastq.gz | rev | cut -c 13- | rev | uniq)
do
STAR --runThreadN 12 --genomeDir ~/FlyBase_Ref --sjdbGTFfile ~/FlyBase_Ref/Drosophila_melanogaster.BDGP6.28.102.gtf --sjdbOverhang 100 --readFilesIn ${i}_R1.fastq.gz ${i}_R2.fastq.gz --readFilesCommand zcat --outSAMtype BAM Unsorted --outFileNamePrefix ${i} --twopassMode Basic
done
# Used this to rename some files b/c naming didn't turn out right, e.g.
# rename RedSJ Red_SJ *.tab
# also moved those outputs to ../STAR_align, e.g.
# mv *.out ../STAR_align



##generate unmapped BAM -- needed for MergeBam
#SM - sample name; LB - library name; PL - platform; RG - read group name
for i in $(ls *.fastq.gz | rev | cut -c 13- | rev | uniq)
do
gatk FastqToSam -F1 ${i}_R1.fastq.gz -F2 ${i}_R2.fastq.gz -O ${i}_fastqtosam.bam -SM ${i} -LB ${i} -PL Illumina -RG ${i}
done
mkdir ../FastqToSam
mv *_fastqtosam.bam ../FastqToSam



##Sort STAR outputs by queryname by before MergeBam
mkdir ../SortSam
cd ../STAR_align
parallel gatk SortSam -I {} -O ../SortSam/{.}_query.bam -SO queryname ::: *.bam




##MergeBam
cd ../SortSam
mkdir ../MergeBam
ls *.bam | rev | cut -c 23- | rev | parallel -j 6 gatk MergeBamAlignment -ALIGNED {}_Aligned.out_query.bam -UNMAPPED ../FastqToSam/{}_fastqtosam.bam -O ../MergeBam/{}_merged.bam -R ~/FlyBase_Ref/Drosophila_melanogaster.BDGP6.28.dna.toplevel.fa





##MarkDuplicates 
cd ../MergeBam
mkdir ../MarkDuplicates
parallel -j 18 gatk --java-options '-XX:ParallelGCThreads=1' MarkDuplicates -I {} -O ../MarkDuplicates/{.}_dpl.bam -M ../MarkDuplicates/{.}_dpl.txt ::: *_merged.bam


## NEW STEP 
## Sort BAM files AGAIN after the MergBam and MarkDuplicates steps BEFORE running HTSeq
mkdir ../SortSam_again
cd ../MarkDuplicates
## parallel gatk SortSam -I {} -O ../SortSam_again/{.}_query.bam -SO queryname ::: *.bam
for i in $(ls *.bam | rev | cut -c 5- | rev | uniq)
do
gatk SortSam -I ${i}.bam -O ../SortSam_again/${i}_query.bam -SO queryname
done




##run HTSeq count
mkdir ../ReadCounts_again
cd ../SortSam_again
parallel -j 18 python -m HTSeq.scripts.count -s no --nonunique none --format bam --secondary-alignments ignore --supplementary-alignments ignore {} ~/FlyBase_Ref/SDrosophila_melanogaster.BDGP6.28.102.gtf ">" ../ReadCounts_again/{.}.tsv ::: *_query.bam




# generate list of X and Y genes (e.g. used for removing Y genes later in DESeq2)
# ...and also Chr2/3 for looking at results across X/2/3.
# X genes: 
awk '{if ($1 == "X") print $0;}' Drosophila_melanogaster.BDGP6.28.102.gtf | awk '{print $10}' | sed 's/"//g' | sed 's/;//g' | uniq > X.chromosome.genes.tsv
# Y genes: 
awk '{if ($1 == "Y") print $0;}' Drosophila_melanogaster.BDGP6.28.102.gtf | awk '{print $10}' | sed 's/"//g' | sed 's/;//g' | uniq > Y.chromosome.genes.tsv
# 2L genes
awk '{if ($1 == "2L") print $0;}' Drosophila_melanogaster.BDGP6.28.102.gtf | awk '{print $10}' | sed 's/"//g' | sed 's/;//g' | uniq > 2L.chromosome.genes.tsv
# 2R genes
awk '{if ($1 == "2R") print $0;}' Drosophila_melanogaster.BDGP6.28.102.gtf | awk '{print $10}' | sed 's/"//g' | sed 's/;//g' | uniq > 2R.chromosome.genes.tsv
# 3L genes
awk '{if ($1 == "3L") print $0;}' Drosophila_melanogaster.BDGP6.28.102.gtf | awk '{print $10}' | sed 's/"//g' | sed 's/;//g' | uniq > 3L.chromosome.genes.tsv
# 3R genes
awk '{if ($1 == "3R") print $0;}' Drosophila_melanogaster.BDGP6.28.102.gtf | awk '{print $10}' | sed 's/"//g' | sed 's/;//g' | uniq > 3R.chromosome.genes.tsv
# Mitochondrial genes
awk '{if ($1 == "mitochondrion genome") print $0;}' Drosophila_melanogaster.BDGP6.28.102.gtf | awk '{print $10}' | sed 's/"//g' | sed 's/;//g' | uniq > mitochondrial.genes.tsv
# all genes
awk '{print $10}' Drosophila_melanogaster.BDGP6.28.102.gtf | sed 's/"//g' | sed 's/;//g' | uniq > all.genes.tsv



